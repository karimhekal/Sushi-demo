[{"E:\\react meals\\01-starting-project\\src\\index.js":"1","E:\\react meals\\01-starting-project\\src\\App.js":"2","E:\\react meals\\01-starting-project\\src\\components\\Layout\\Header.js":"3","E:\\react meals\\01-starting-project\\src\\components\\Layout\\HeaderCartButton.js":"4","E:\\react meals\\01-starting-project\\src\\components\\Cart\\CartIcon.js":"5","E:\\react meals\\01-starting-project\\src\\components\\Meals\\Meals.js":"6","E:\\react meals\\01-starting-project\\src\\components\\Meals\\AvailableMeals.js":"7","E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealsSummary.js":"8","E:\\react meals\\01-starting-project\\src\\components\\UI\\Card.js":"9","E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealItem\\MealItem.js":"10","E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealItem\\MealItemForm.js":"11","E:\\react meals\\01-starting-project\\src\\components\\UI\\Input.js":"12","E:\\react meals\\01-starting-project\\src\\components\\Cart\\Cart.js":"13","E:\\react meals\\01-starting-project\\src\\components\\UI\\Modal.js":"14","E:\\react meals\\01-starting-project\\src\\store\\CartProvider.js":"15","E:\\react meals\\01-starting-project\\src\\store\\cart-context.js":"16","E:\\react meals\\01-starting-project\\src\\components\\Cart\\CartItem.js":"17","E:\\react meals\\01-starting-project\\src\\components\\Cart\\Checkout.js":"18"},{"size":142,"mtime":1616594953000,"results":"19","hashOfConfig":"20"},{"size":686,"mtime":1640088375390,"results":"21","hashOfConfig":"20"},{"size":655,"mtime":1642164785763,"results":"22","hashOfConfig":"20"},{"size":1322,"mtime":1641029214195,"results":"23","hashOfConfig":"20"},{"size":523,"mtime":1639975951289,"results":"24","hashOfConfig":"20"},{"size":303,"mtime":1639978640539,"results":"25","hashOfConfig":"20"},{"size":2521,"mtime":1641276332912,"results":"26","hashOfConfig":"20"},{"size":546,"mtime":1639976609188,"results":"27","hashOfConfig":"20"},{"size":201,"mtime":1639977591756,"results":"28","hashOfConfig":"20"},{"size":996,"mtime":1641035420072,"results":"29","hashOfConfig":"20"},{"size":1153,"mtime":1640046946059,"results":"30","hashOfConfig":"20"},{"size":341,"mtime":1639986517120,"results":"31","hashOfConfig":"20"},{"size":3153,"mtime":1641602740333,"results":"32","hashOfConfig":"20"},{"size":790,"mtime":1639982828545,"results":"33","hashOfConfig":"20"},{"size":2955,"mtime":1641520538478,"results":"34","hashOfConfig":"20"},{"size":229,"mtime":1641520521212,"results":"35","hashOfConfig":"20"},{"size":635,"mtime":1640911045704,"results":"36","hashOfConfig":"20"},{"size":3636,"mtime":1641604053290,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1a4qa91",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\react meals\\01-starting-project\\src\\index.js",[],["79","80"],"E:\\react meals\\01-starting-project\\src\\App.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Layout\\Header.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Layout\\HeaderCartButton.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Cart\\CartIcon.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Meals\\Meals.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Meals\\AvailableMeals.js",["81"],"import { useEffect, useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport classes from './AvailableMeals.module.css'\r\nimport MealItem from './MealItem/MealItem';\r\n\r\nconst DUMMY_MEALS = [\r\n    {\r\n        id: 'm1',\r\n        name: 'Sushi',\r\n        description: 'Finest fish and veggies',\r\n        price: 22.99,\r\n    },\r\n    {\r\n        id: 'm2',\r\n        name: 'Schnitzel',\r\n        description: 'A german specialty!',\r\n        price: 16.5,\r\n    },\r\n    {\r\n        id: 'm3',\r\n        name: 'Barbecue Burger',\r\n        description: 'American, raw, meaty',\r\n        price: 12.99,\r\n    },\r\n    {\r\n        id: 'm4',\r\n        name: 'Green Bowl',\r\n        description: 'Healthy...and green...',\r\n        price: 18.99,\r\n    },\r\n];\r\nconst AvailableMeals = () => {\r\n\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            setIsLoading(true);\r\n            const response = await fetch('https://authentication-50462.firebaseio.com/meals.json');\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong')\r\n            }\r\n            const responseData = await response.json();\r\n            const loadedMeals = [];\r\n\r\n            for (const key in responseData) {\r\n                loadedMeals.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    price: responseData[key].price,\r\n                    description: responseData[key].description\r\n                })\r\n            }\r\n            setMeals(loadedMeals);\r\n            console.log(loadedMeals);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchMeals().catch((error) => {\r\n            setIsLoading(false);\r\n            setHttpError(error.message)\r\n        });\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return <section className={classes.MealsLoading}>Loading ...</section>\r\n    }\r\n    if (httpError) {\r\n        return <section className={classes.MealsError}> <p>{httpError}</p> </section>\r\n\r\n    }\r\n    const mealsList = meals.map(meal => <MealItem key={meal.id} id={meal.id} price={meal.price} name={meal.name} description={meal.description} />);\r\n    return (\r\n        <section className={classes.meals} >\r\n            <Card>\r\n                <ul>\r\n                    {mealsList}\r\n                </ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\nexport default AvailableMeals;","E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealsSummary.js",[],"E:\\react meals\\01-starting-project\\src\\components\\UI\\Card.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealItem\\MealItem.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"E:\\react meals\\01-starting-project\\src\\components\\UI\\Input.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Cart\\Cart.js",["82"],"import Modal from '../UI/Modal';\r\nimport classes from './Cart.module.css'\r\nimport React, { useContext, useState } from 'react';\r\nimport CartItem from './CartItem';\r\nimport CartContext from '../../store/cart-context';\r\nimport Checkout from './Checkout';\r\nconst Cart = (props) => {\r\n    const cartCtx = useContext(CartContext);\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCtx.removeItem(id);\r\n    }\r\n    const cartItemAddHandler = (item) => {\r\n        cartCtx.addItem({ ...item, amount: 1 });\r\n    }\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    }\r\n\r\n    const sumbitOrderHandler = async (userData) => {\r\n        setIsSubmitting(true);\r\n        await fetch('https://authentication-50462.firebaseio.com/orders.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ user: userData, orderedItems: cartCtx.items })\r\n        })\r\n        setIsSubmitting(false);\r\n        setDidSubmit(true);\r\n        cartCtx.clearCart();\r\n    }\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCtx.items.length > 0;\r\n    const modalActions = <div className={classes.actions}>\r\n        <button onClick={props.onClose} className={classes['button--alt']}>Close</button>\r\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n    </div>\r\n\r\n    const cartItems =\r\n        <ul className={classes['cart-items']}>\r\n            {cartCtx.items.map(item =>\r\n                <CartItem\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    amount={item.amount}\r\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                    onAdd={cartItemAddHandler.bind(null, item)}\r\n                    price={item.price} />\r\n            )\r\n            }\r\n        </ul>\r\n\r\n    const cartModalContent =\r\n        <div>\r\n            <React.Fragment>\r\n                {cartItems}\r\n                <div className={classes.total}>\r\n                    <span>Total Amount</span>\r\n                    <span>{totalAmount}</span>\r\n                </div>\r\n                {isCheckout && <Checkout onConfirm={sumbitOrderHandler} onCancel={props.onClose} />}\r\n                {!isCheckout && modalActions}\r\n            </React.Fragment>\r\n        </div>\r\n    const closeButtonClass = classes['button--alt']\r\n    const isSubmittingModalContent = <p>Sending order data ...</p>\r\n    const didSubmitModalContent = <React.Fragment><p>Successfully sent the order</p>\r\n        <div className={classes.actions}>\r\n            <button onClick={props.onClose} className={classes['button--alt']}>Close</button>\r\n        </div>\r\n    </React.Fragment>\r\n    return (\r\n        <Modal onClose={props.onClose} >\r\n            {!isSubmitting && !didSubmit && cartModalContent}\r\n            {isSubmitting && isSubmittingModalContent}\r\n            {!isSubmitting && didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    );\r\n}\r\nexport default Cart;","E:\\react meals\\01-starting-project\\src\\components\\UI\\Modal.js",["83"],"import react from 'react'\r\nimport { Fragment } from 'react'\r\nimport reactDom from 'react-dom'\r\nimport classes from './Modal.module.css'\r\nconst BackDrop = props => { return (<div className={classes.backdrop} onClick={props.onClose} />) }\r\nconst ModalOverlay = props => {\r\n    return (<div className={classes.modal} >\r\n        <div className={classes.content}>\r\n            {props.children}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst portalElement = document.getElementById('overlays');\r\nconst Modal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {reactDom.createPortal(<BackDrop onClose={props.onClose} />, portalElement)}\r\n            {reactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,portalElement)}\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Modal;","E:\\react meals\\01-starting-project\\src\\store\\CartProvider.js",["84","85","86"],"import CartContext from \"./cart-context\";\r\nimport { useReducer } from 'react'\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\nconst cartReducer = (state, action) => {\r\n    // console.log(action);\r\n\r\n    if (action.type == 'ADD') {\r\n        let updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\r\n        let updatedItems = state.items;\r\n\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n        let cartItem = state.items[existingCartItemIndex];\r\n        if (cartItem) {\r\n            const updatedItem = {\r\n                ...cartItem,\r\n                amount: cartItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n    else if (action.type == 'REMOVE') {\r\n        let existingItemIndex = state.items.findIndex((item) => item.id === action.id)\r\n        let updatedItem = state.items[existingItemIndex];\r\n        let updatedTotalAmount = state.totalAmount - updatedItem.price;\r\n        console.log(updatedTotalAmount);\r\n        let updatedItems = state.items;\r\n        console.log('asdasd')\r\n        if (state.items[existingItemIndex].amount == 1) {\r\n            console.log('only 1')\r\n            let filteredItems = updatedItems.slice(0, existingItemIndex).concat(updatedItems.slice(existingItemIndex + 1, updatedItems.length))\r\n            updatedItems = filteredItems;\r\n            console.log(filteredItems);\r\n        }\r\n        else {\r\n            updatedItems[existingItemIndex].amount -= 1;\r\n            console.log('theres more')\r\n        }\r\n\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    if (action.type === 'CLEAR') {\r\n        return defaultCartState;\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props => {\r\n\r\n    const [cartState, dispachCartAction] = useReducer(cartReducer, defaultCartState)\r\n    const addItemToCartHandler = (item) => {\r\n        dispachCartAction({ type: 'ADD', item: item })\r\n        // console.log(item);\r\n    }\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispachCartAction({ type: 'REMOVE', id: id })\r\n\r\n    }\r\n\r\n    const clearCartHandler = () => {\r\n        dispachCartAction({ type: 'CLEAR' })\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n        clearCart: clearCartHandler,\r\n    }\r\n\r\n    return (<CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>)\r\n}\r\n\r\nexport default CartProvider;","E:\\react meals\\01-starting-project\\src\\store\\cart-context.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Cart\\CartItem.js",[],"E:\\react meals\\01-starting-project\\src\\components\\Cart\\Checkout.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":7,"nodeType":"93","messageId":"94","endLine":6,"endColumn":18},{"ruleId":"91","severity":1,"message":"95","line":67,"column":11,"nodeType":"93","messageId":"94","endLine":67,"endColumn":27},{"ruleId":"91","severity":1,"message":"96","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":11,"column":21,"nodeType":"99","messageId":"100","endLine":11,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":33,"column":26,"nodeType":"99","messageId":"100","endLine":33,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":40,"column":51,"nodeType":"99","messageId":"100","endLine":40,"endColumn":53},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'DUMMY_MEALS' is assigned a value but never used.","Identifier","unusedVar","'closeButtonClass' is assigned a value but never used.","'react' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]